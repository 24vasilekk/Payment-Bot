#!/bin/bash

# –°–∫—Ä–∏–ø—Ç —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è Payment Bot
# –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä—É–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –¥–µ–ø–ª–æ—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä

set -e

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
BOT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"
SERVICE_NAME="payment-bot"
PYTHON_VERSION="3.9"

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
print_header() {
    echo ""
    echo -e "${BLUE}================================${NC}"
    echo -e "${BLUE} $1${NC}"
    echo -e "${BLUE}================================${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–º–∞–Ω–¥—ã
check_command() {
    if ! command -v $1 &> /dev/null; then
        echo -e "${RED}‚ùå –ö–æ–º–∞–Ω–¥–∞ $1 –Ω–µ –Ω–∞–π–¥–µ–Ω–∞${NC}"
        return 1
    fi
    return 0
}

print_header "üöÄ –†–ê–ó–í–ï–†–¢–´–í–ê–ù–ò–ï PAYMENT BOT"

echo -e "${GREEN}üìÅ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ø—Ä–æ–µ–∫—Ç–∞: ${BOT_DIR}${NC}"
echo -e "${GREEN}üêç –¢—Ä–µ–±—É–µ–º–∞—è –≤–µ—Ä—Å–∏—è Python: ${PYTHON_VERSION}+${NC}"

# 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π
print_header "üîç –ü–†–û–í–ï–†–ö–ê –°–ò–°–¢–ï–ú–´"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Python
if check_command python3; then
    python_version=$(python3 --version | cut -d' ' -f2)
    echo -e "${GREEN}‚úÖ Python –Ω–∞–π–¥–µ–Ω: ${python_version}${NC}"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏
    if python3 -c "import sys; exit(0 if sys.version_info >= (3, 9) else 1)"; then
        echo -e "${GREEN}‚úÖ –í–µ—Ä—Å–∏—è Python –ø–æ–¥—Ö–æ–¥–∏—Ç${NC}"
    else
        echo -e "${RED}‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è Python ${PYTHON_VERSION} –∏–ª–∏ –≤—ã—à–µ${NC}"
        echo -e "${YELLOW}üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∞–∫—Ç—É–∞–ª—å–Ω—É—é –≤–µ—Ä—Å–∏—é Python${NC}"
        exit 1
    fi
else
    echo -e "${RED}‚ùå Python –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ pip
if check_command pip3; then
    echo -e "${GREEN}‚úÖ pip –Ω–∞–π–¥–µ–Ω${NC}"
else
    echo -e "${RED}‚ùå pip –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ git (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
if check_command git; then
    echo -e "${GREEN}‚úÖ git –Ω–∞–π–¥–µ–Ω${NC}"
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏
    if [ -d "${BOT_DIR}/.git" ]; then
        branch=$(git -C "${BOT_DIR}" branch --show-current 2>/dev/null || echo "unknown")
        commit=$(git -C "${BOT_DIR}" rev-parse --short HEAD 2>/dev/null || echo "unknown")
        echo -e "${GREEN}üìä –í–µ—Ç–∫–∞: ${branch}, –∫–æ–º–º–∏—Ç: ${commit}${NC}"
    fi
else
    echo -e "${YELLOW}‚ö†Ô∏è git –Ω–µ –Ω–∞–π–¥–µ–Ω (–Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ)${NC}"
fi

# 2. –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è
print_header "üì¶ –ü–û–î–ì–û–¢–û–í–ö–ê –û–ö–†–£–ñ–ï–ù–ò–Ø"

cd "${BOT_DIR}"

# –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
if [ ! -d "venv" ]; then
    echo -e "${YELLOW}üî® –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è...${NC}"
    python3 -m venv venv
    echo -e "${GREEN}‚úÖ –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ${NC}"
else
    echo -e "${GREEN}‚úÖ –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–∞–π–¥–µ–Ω–æ${NC}"
fi

# –ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
echo -e "${YELLOW}üîß –ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è...${NC}"
source venv/bin/activate

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ pip
echo -e "${YELLOW}‚¨ÜÔ∏è –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ pip...${NC}"
pip install --upgrade pip > /dev/null 2>&1

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
if [ -f "requirements.txt" ]; then
    echo -e "${YELLOW}üìö –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...${NC}"
    pip install -r requirements.txt
    echo -e "${GREEN}‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã${NC}"
else
    echo -e "${RED}‚ùå –§–∞–π–ª requirements.txt –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
    exit 1
fi

# 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
print_header "‚öôÔ∏è –ü–†–û–í–ï–†–ö–ê –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ .env —Ñ–∞–π–ª–∞
if [ -f ".env" ]; then
    echo -e "${GREEN}‚úÖ –§–∞–π–ª .env –Ω–∞–π–¥–µ–Ω${NC}"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
    required_vars=("TELEGRAM_BOT_TOKEN" "YOOKASSA_SHOP_ID" "YOOKASSA_SECRET_KEY" "CHANNEL_ID")
    missing_vars=()
    
    for var in "${required_vars[@]}"; do
        if ! grep -q "^${var}=" .env || grep -q "^${var}=$" .env || grep -q "^${var}=YOUR_" .env; then
            missing_vars+=("$var")
        fi
    done
    
    if [ ${#missing_vars[@]} -gt 0 ]; then
        echo -e "${RED}‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:${NC}"
        printf '%s\n' "${missing_vars[@]}" | sed 's/^/   - /'
        echo -e "${YELLOW}üí° –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ .env —Ñ–∞–π–ª –ø–µ—Ä–µ–¥ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ–º${NC}"
        exit 1
    else
        echo -e "${GREEN}‚úÖ –í—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã${NC}"
    fi
else
    if [ -f ".env.example" ]; then
        echo -e "${YELLOW}‚ö†Ô∏è –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –∏–∑ –ø—Ä–∏–º–µ—Ä–∞...${NC}"
        cp .env.example .env
        echo -e "${YELLOW}üìù –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ .env —Ñ–∞–π–ª –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ –¥–µ–ø–ª–æ–π —Å–Ω–æ–≤–∞${NC}"
        exit 1
    else
        echo -e "${RED}‚ùå –§–∞–π–ª—ã .env –∏ .env.example –Ω–µ –Ω–∞–π–¥–µ–Ω—ã${NC}"
        exit 1
    fi
fi

# 4. –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
print_header "üìÅ –°–û–ó–î–ê–ù–ò–ï –î–ò–†–ï–ö–¢–û–†–ò–ô"

directories=("data" "logs" "backups")
for dir in "${directories[@]}"; do
    if [ ! -d "$dir" ]; then
        mkdir -p "$dir"
        echo -e "${GREEN}‚úÖ –°–æ–∑–¥–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $dir${NC}"
    else
        echo -e "${GREEN}‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: $dir${NC}"
    fi
done

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
chmod 755 data logs backups
echo -e "${GREEN}‚úÖ –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã${NC}"

# 5. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
print_header "üóÑÔ∏è –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ë–ê–ó–´ –î–ê–ù–ù–´–•"

echo -e "${YELLOW}üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...${NC}"
python3 -c "
import asyncio
import sys
sys.path.append('.')
try:
    from database.database import init_database
    asyncio.run(init_database())
    print('‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞')
except Exception as e:
    print(f'‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ë–î: {e}')
    sys.exit(1)
"

if [ $? -eq 0 ]; then
    echo -e "${GREEN}‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ç–æ–≤–∞${NC}"
else
    echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö${NC}"
    exit 1
fi

# 6. –°–æ–∑–¥–∞–Ω–∏–µ systemd —Å–µ—Ä–≤–∏—Å–∞ (–¥–ª—è Linux)
print_header "üîß –ù–ê–°–¢–†–û–ô–ö–ê –°–ï–†–í–ò–°–ê"

if command -v systemctl &> /dev/null; then
    echo -e "${YELLOW}üîß –°–æ–∑–¥–∞–Ω–∏–µ systemd —Å–µ—Ä–≤–∏—Å–∞...${NC}"
    
    # –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª —Å–µ—Ä–≤–∏—Å–∞
    cat > "${SERVICE_NAME}.service" << EOF
[Unit]
Description=Telegram Payment Bot
After=network.target

[Service]
Type=simple
User=$USER
WorkingDirectory=${BOT_DIR}
ExecStart=${BOT_DIR}/venv/bin/python ${BOT_DIR}/main.py
Restart=always
RestartSec=10
Environment=PATH=${BOT_DIR}/venv/bin

[Install]
WantedBy=multi-user.target
EOF

    echo -e "${GREEN}‚úÖ –§–∞–π–ª —Å–µ—Ä–≤–∏—Å–∞ —Å–æ–∑–¥–∞–Ω: ${SERVICE_NAME}.service${NC}"
    echo -e "${YELLOW}üí° –î–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–µ—Ä–≤–∏—Å–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:${NC}"
    echo -e "${YELLOW}   sudo cp ${SERVICE_NAME}.service /etc/systemd/system/${NC}"
    echo -e "${YELLOW}   sudo systemctl daemon-reload${NC}"
    echo -e "${YELLOW}   sudo systemctl enable ${SERVICE_NAME}${NC}"
    
else
    echo -e "${YELLOW}‚ö†Ô∏è systemctl –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞${NC}"
fi

# 7. –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
print_header "üìú –°–û–ó–î–ê–ù–ò–ï –°–ö–†–ò–ü–¢–û–í"

# –°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞
cat > start.sh << 'EOF'
#!/bin/bash
cd "$(dirname "$0")"
source venv/bin/activate
echo "üöÄ –ó–∞–ø—É—Å–∫ Payment Bot..."
python main.py
EOF

chmod +x start.sh
echo -e "${GREEN}‚úÖ –°–æ–∑–¥–∞–Ω —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞: start.sh${NC}"

# –°–∫—Ä–∏–ø—Ç –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
cat > stop.sh << 'EOF'
#!/bin/bash
echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Payment Bot..."
pkill -f "python main.py"
sleep 2
if pgrep -f "python main.py" > /dev/null; then
    echo "‚ö†Ô∏è –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞..."
    pkill -9 -f "python main.py"
fi
echo "‚úÖ Bot –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
EOF

chmod +x stop.sh
echo -e "${GREEN}‚úÖ –°–æ–∑–¥–∞–Ω —Å–∫—Ä–∏–ø—Ç –æ—Å—Ç–∞–Ω–æ–≤–∫–∏: stop.sh${NC}"

# –°–∫—Ä–∏–ø—Ç —Å—Ç–∞—Ç—É—Å–∞
cat > status.sh << 'EOF'
#!/bin/bash
if pgrep -f "python main.py" > /dev/null; then
    echo "‚úÖ Payment Bot –∑–∞–ø—É—â–µ–Ω"
    echo "PID: $(pgrep -f 'python main.py')"
    echo "–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: $(ps -o etime= -p $(pgrep -f 'python main.py') | tr -d ' ')"
else
    echo "‚ùå Payment Bot –Ω–µ –∑–∞–ø—É—â–µ–Ω"
fi
EOF

chmod +x status.sh
echo -e "${GREEN}‚úÖ –°–æ–∑–¥–∞–Ω —Å–∫—Ä–∏–ø—Ç —Å—Ç–∞—Ç—É—Å–∞: status.sh${NC}"

# –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–ø—Ç—ã –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–º–∏
chmod +x scripts/*.sh
echo -e "${GREEN}‚úÖ –ü—Ä–∞–≤–∞ –Ω–∞ —Å–∫—Ä–∏–ø—Ç—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã${NC}"

# 8. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
print_header "üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò"

echo -e "${YELLOW}üß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–æ–≤...${NC}"
python3 -c "
import sys
sys.path.append('.')
try:
    from config.settings import TELEGRAM_BOT_TOKEN, YOOKASSA_SHOP_ID
    from database.database import db
    from services.yookassa_service import yookassa_service
    print('‚úÖ –í—Å–µ –º–æ–¥—É–ª–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä—É—é—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ')
except Exception as e:
    print(f'‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}')
    sys.exit(1)
"

if [ $? -ne 0 ]; then
    echo -e "${RED}‚ùå –û—à–∏–±–∫–∏ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏${NC}"
    exit 1
fi

echo -e "${GREEN}‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞${NC}"

# 9. –§–∏–Ω–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
print_header "üéâ –†–ê–ó–í–ï–†–¢–´–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û"

echo -e "${GREEN}‚úÖ Payment Bot —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç!${NC}"
echo ""
echo -e "${YELLOW}üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:${NC}"
echo -e "${YELLOW}1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ .env —Ñ–∞–π–ª–µ${NC}"
echo -e "${YELLOW}2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞: ./start.sh${NC}"
echo -e "${YELLOW}3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å: ./status.sh${NC}"
echo ""
echo -e "${YELLOW}üìö –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:${NC}"
echo -e "${YELLOW}   ./start.sh    - –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞${NC}"
echo -e "${YELLOW}   ./stop.sh     - –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞${NC}"
echo -e "${YELLOW}   ./status.sh   - –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞${NC}"
echo -e "${YELLOW}   tail -f logs/bot.log - –ø—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤${NC}"
echo ""
echo -e "${YELLOW}üîó –í–∞–∂–Ω—ã–µ —Ñ–∞–π–ª—ã:${NC}"
echo -e "${YELLOW}   üìÑ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: .env${NC}"
echo -e "${YELLOW}   üóÑÔ∏è –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: data/users.db${NC}"
echo -e "${YELLOW}   üìù –õ–æ–≥–∏: logs/bot.log${NC}"
echo ""
echo -e "${YELLOW}üö® –ù–µ –∑–∞–±—É–¥—å—Ç–µ:${NC}"
echo -e "${YELLOW}   ‚Ä¢ –ù–∞—Å—Ç—Ä–æ–∏—Ç—å webhook URL –≤ –ÆKassa${NC}"
echo -e "${YELLOW}   ‚Ä¢ –î–æ–±–∞–≤–∏—Ç—å –±–æ—Ç–∞ –≤ –∫–∞–Ω–∞–ª –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞${NC}"
echo -e "${YELLOW}   ‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–∞–±–æ—Ç—É –ø–ª–∞—Ç–µ–∂–µ–π${NC}"
echo ""
echo -e "${GREEN}üéä –£–¥–∞—á–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è!${NC}"